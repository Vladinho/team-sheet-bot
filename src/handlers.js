const GameSession = require('./GameSession');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async function restoreStateFromMessage(bot, msg, gameSessions, userStates) {
  const chatId = msg.chat.id;
  const text = msg.text;
  
  if (!text) return false;
  
  // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
  const gameSession = GameSession.parseFromMessage(text, chatId, msg.message_id);
  
  if (gameSession) {
    gameSessions.set(chatId, gameSession);
    console.log(`–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è chatId: ${chatId}`);
    return true;
  }
  
  return false;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
function handleStart(bot, msg, gameSessions, userStates, adminId) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const GROUP_ID = process.env.GROUP_ID ? parseInt(process.env.GROUP_ID) : null;
  
  if (GROUP_ID && chatId !== GROUP_ID) {
    bot.sendMessage(chatId, '–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ.');
    return;
  }

  if (userId === adminId) {
    bot.sendMessage(chatId, 
      '–ü—Ä–∏–≤–µ—Ç! –¢—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π /start <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> <–æ–ø–∏—Å–∞–Ω–∏–µ> –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–≥—Ä—É.\n\n–ü—Ä–∏–º–µ—Ä: /start 10 –§—É—Ç–±–æ–ª –≤ 18:00'
    );
  } else {
    bot.sendMessage(chatId, 
      '–ü—Ä–∏–≤–µ—Ç! –û–∂–∏–¥–∞–π —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–≥—Ä—É –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n' +
      'ü§ù <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏:</b>\n' +
      '‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞: + –ò–º—è\n' +
      '‚Ä¢ –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞: - –ò–º—è\n' +
      '‚Ä¢ –õ—é–±–æ–π –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å/—É–¥–∞–ª—è—Ç—å –ª—é–±—ã—Ö –∏–≥—Ä–æ–∫–æ–≤', 
      { parse_mode: 'HTML' }
    );
  }
}

// –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
async function handleCreateGame(bot, msg, gameSessions, userStates, playersLimit, gameDescription) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const GROUP_ID = process.env.GROUP_ID ? parseInt(process.env.GROUP_ID) : null;

  console.log(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã: chatId=${chatId}, playersLimit=${playersLimit}, description="${gameDescription}"`);

  if (GROUP_ID && chatId !== GROUP_ID) {
    bot.sendMessage(chatId, '–ò–≥—Ä—ã –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ.');
    return;
  }

  // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å—Ä–∞–∑—É –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∏–≥—Ä—ã
  const gameMessage = await bot.sendMessage(chatId, '‚öΩ –ó–∞–ø–∏—Å—å –Ω–∞ –∏–≥—Ä—É');
  console.log(`–°–æ–∑–¥–∞–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: messageId=${gameMessage.message_id}`);
  
  const gameSession = new GameSession(chatId, gameMessage.message_id, playersLimit, true, gameDescription);
  gameSessions.set(chatId, gameSession);
  
  console.log(`GameSession —Å–æ–∑–¥–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ...`);
  await updateGameMessage(bot, gameSession);
  console.log(`–ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
async function handleStopGame(bot, msg, gameSessions, userStates) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const GROUP_ID = process.env.GROUP_ID ? parseInt(process.env.GROUP_ID) : null;

  console.log(`–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã: chatId=${chatId}`);

  if (GROUP_ID && chatId !== GROUP_ID) {
    bot.sendMessage(chatId, '–ò–≥—Ä—ã –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ.');
    return;
  }

  const gameSession = gameSessions.get(chatId);
  if (!gameSession) {
    bot.sendMessage(chatId, '–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
    return;
  }

  // –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
  gameSession.stopGame();
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä—ã (—É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏)
  await updateGameMessage(bot, gameSession);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
  bot.sendMessage(chatId, 'üîö –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–ø–∏—Å—å –Ω–∞ –∏–≥—Ä—É –∑–∞–∫—Ä—ã—Ç–∞.');
  
  console.log(`–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è chatId: ${chatId}`);
}



// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function handleMessage(bot, msg, gameSessions, userStates) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;

  if (!text || text.startsWith('/')) return;

  // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const restored = await restoreStateFromMessage(bot, msg, gameSessions, userStates);
  if (restored) {
    console.log(`–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è chatId: ${chatId}`);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
  const addPlayerMatch = text.match(/^\+\s*(.+)$/);
  const removePlayerMatch = text.match(/^\-\s*(.+)$/);

  if (addPlayerMatch) {
    const playerName = addPlayerMatch[1].trim();
    if (playerName.length === 0) {
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞.');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É
    const gameSession = gameSessions.get(chatId);
    if (!gameSession || !gameSession.isActive) {
      bot.sendMessage(chatId, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞–ø–∏—Å–∏. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –û–±–Ω–æ–≤–∏—Ç—å');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫
    const existingPlayer = gameSession.players.find(p => 
      p.firstName && p.firstName.toLowerCase() === playerName.toLowerCase()
    ) || gameSession.reserve.find(p => 
      p.firstName && p.firstName.toLowerCase() === playerName.toLowerCase()
    );

    if (existingPlayer) {
      bot.sendMessage(chatId, `–ò–≥—Ä–æ–∫ "${playerName}" —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ –∏–≥—Ä—É.`);
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞-–¥—Ä—É–≥–∞
    const newPlayer = {
      userId: `friend_${Date.now()}_${playerName}`,
      username: null,
      firstName: playerName,
      lastName: null,
      isFriend: true,
      addedBy: userId
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∏–ª–∏ —Ä–µ–∑–µ—Ä–≤
    const addedByUser = msg.from.first_name || msg.from.username || `User${userId}`;
    if (gameSession.players.length < gameSession.playersLimit) {
      gameSession.players.push(newPlayer);
      bot.sendMessage(chatId, `‚úÖ –ò–≥—Ä–æ–∫ "${playerName}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${addedByUser} (id:${userId})!`);
    } else {
      gameSession.reserve.push(newPlayer);
      bot.sendMessage(chatId, `‚úÖ –ò–≥—Ä–æ–∫ "${playerName}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–µ–∑–µ—Ä–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${addedByUser} (id:${userId})!`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä—ã
    await updateGameMessage(bot, gameSession);
    return;
  }

  if (removePlayerMatch) {
    const playerName = removePlayerMatch[1].trim();
    if (playerName.length === 0) {
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É
    const gameSession = gameSessions.get(chatId);
    if (!gameSession || !gameSession.isActive) {
      bot.sendMessage(chatId, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –û–±–Ω–æ–≤–∏—Ç—å');
      return;
    }

    // –ò—â–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ
    let playerIndex = gameSession.players.findIndex(p => 
      p.firstName && p.firstName.toLowerCase() === playerName.toLowerCase()
    );
    let isMainPlayer = true;

    // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ, –∏—â–µ–º –≤ —Ä–µ–∑–µ—Ä–≤–µ
    if (playerIndex === -1) {
      playerIndex = gameSession.reserve.findIndex(p => 
        p.firstName && p.firstName.toLowerCase() === playerName.toLowerCase()
      );
      isMainPlayer = false;
    }

    if (playerIndex === -1) {
      bot.sendMessage(chatId, `–ò–≥—Ä–æ–∫ "${playerName}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ.`);
      return;
    }

    // –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
    if (isMainPlayer) {
      const removedPlayer = gameSession.players[playerIndex];
      const playerId = removedPlayer.userId;
      gameSession.players.splice(playerIndex, 1);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ—Å—Ç–æ
      if (gameSession.reserve.length > 0) {
        const reservePlayer = gameSession.reserve.shift();
        gameSession.players.push(reservePlayer);
      }
      
      bot.sendMessage(chatId, `‚ùå –ò–≥—Ä–æ–∫ "${playerName}" (id:${playerId}) —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞!`);
    } else {
      const removedPlayer = gameSession.reserve[playerIndex];
      const playerId = removedPlayer.userId;
      gameSession.reserve.splice(playerIndex, 1);
      bot.sendMessage(chatId, `‚ùå –ò–≥—Ä–æ–∫ "${playerName}" (id:${playerId}) —É–¥–∞–ª–µ–Ω –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞!`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä—ã
    await updateGameMessage(bot, gameSession);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (text === '-') {
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É
    const gameSession = gameSessions.get(chatId);
    if (!gameSession || !gameSession.isActive) {
      bot.sendMessage(chatId, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –û–±–Ω–æ–≤–∏—Ç—å');
      return;
    }

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–∫–µ –∏–≥—Ä–æ–∫–æ–≤
    let playerIndex = gameSession.players.findIndex(p => p.userId === userId);
    let isMainPlayer = true;

    // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ, –∏—â–µ–º –≤ —Ä–µ–∑–µ—Ä–≤–µ
    if (playerIndex === -1) {
      playerIndex = gameSession.reserve.findIndex(p => p.userId === userId);
      isMainPlayer = false;
    }

    if (playerIndex === -1) {
      bot.sendMessage(chatId, '–í—ã –Ω–µ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∏–≥—Ä—É.');
      return;
    }

    // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (isMainPlayer) {
      const playerName = msg.from.first_name || msg.from.username || `User${userId}`;
      gameSession.players.splice(playerIndex, 1);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ—Å—Ç–æ
      if (gameSession.reserve.length > 0) {
        const reservePlayer = gameSession.reserve.shift();
        gameSession.players.push(reservePlayer);
      }
      
      bot.sendMessage(chatId, `‚ùå –ó–∞–ø–∏—Å—å ${playerName} (id:${userId}) –æ—Ç–º–µ–Ω–µ–Ω–∞!`);
    } else {
      const playerName = msg.from.first_name || msg.from.username || `User${userId}`;
      gameSession.reserve.splice(playerIndex, 1);
      bot.sendMessage(chatId, `‚ùå –ó–∞–ø–∏—Å—å ${playerName} (id:${userId}) –≤ —Ä–µ–∑–µ—Ä–≤–µ –æ—Ç–º–µ–Ω–µ–Ω–∞!`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä—ã
    await updateGameMessage(bot, gameSession);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  if (text.toLowerCase() === 'stop') {
    const gameSession = gameSessions.get(chatId);
    if (!gameSession) {
      bot.sendMessage(chatId, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.');
      return;
    }

    if (!gameSession.isActive) {
      bot.sendMessage(chatId, '–ò–≥—Ä–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const ADMIN_ID = parseInt(process.env.ADMIN_ID);
    if (userId !== ADMIN_ID) {
      bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã.');
      return;
    }

    // –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
    gameSession.stopGame();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä—ã (—É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏)
    await updateGameMessage(bot, gameSession);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    bot.sendMessage(chatId, 'üîö –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–ø–∏—Å—å –Ω–∞ –∏–≥—Ä—É –∑–∞–∫—Ä—ã—Ç–∞.');
    
    console.log(`–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è chatId: ${chatId}`);
    return;
  }

  // –û–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
  // –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ bot.onText
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
async function handleCallbackQuery(bot, query, gameSessions, userStates, adminId) {
  const chatId = query.message.chat.id;
  const userId = query.from.id;
  const data = query.data;
  const messageId = query.message.message_id;
  const messageText = query.message.text;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
  let gameSession = gameSessions.get(chatId);
  
  // –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  if (!gameSession && messageText) {
    gameSession = GameSession.parseFromMessage(messageText, chatId, messageId);
    if (gameSession) {
      gameSessions.set(chatId, gameSession);
      console.log(`–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ callback –¥–ª—è chatId: ${chatId}`);
    }
  }
  
  if (!gameSession) {
    bot.answerCallbackQuery(query.id, { text: '–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.' });
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞
  if (!gameSession.isActive) {
    bot.answerCallbackQuery(query.id, { text: '–ò–≥—Ä–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.' });
    return;
  }

  const username = query.from.username;
  const firstName = query.from.first_name;
  const lastName = query.from.last_name;

  switch (data) {
    case 'register':
      const currentGameSession = gameSessions.get(chatId);
      if (currentGameSession.players.find(p => p.userId === userId) || 
          currentGameSession.reserve.find(p => p.userId === userId)) {
        bot.answerCallbackQuery(query.id, { text: '–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã!' });
        return;
      }

      const isMain = currentGameSession.addPlayer(userId, username, firstName, lastName);
      await updateGameMessage(bot, currentGameSession);
      bot.answerCallbackQuery(query.id, { 
        text: isMain ? '–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã!' : '–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–∑–µ—Ä–≤!' 
      });
      break;

    case 'register_reserve':
      const reserveGameSession = gameSessions.get(chatId);
      if (reserveGameSession.players.find(p => p.userId === userId) || 
          reserveGameSession.reserve.find(p => p.userId === userId)) {
        bot.answerCallbackQuery(query.id, { text: '–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã!' });
        return;
      }

      reserveGameSession.reserve.push({ userId, username, firstName, lastName });
      await updateGameMessage(bot, reserveGameSession);
      bot.answerCallbackQuery(query.id, { text: '–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–∑–µ—Ä–≤!' });
      break;



    case 'refresh_state':
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –±–µ–∑ –∑–∞–ø–∏—Å–∏ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
      await updateGameMessage(bot, gameSession);
      bot.answerCallbackQuery(query.id, { text: '–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–æ!' });
      break;

    default:
      break;
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä—ã
async function updateGameMessage(bot, gameSession) {
  try {
    const message = gameSession.generateMessage();
    const keyboard = gameSession.generateKeyboard();
    
    console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä—ã: chatId=${gameSession.chatId}, lastMessageId=${gameSession.lastMessageId}`);
    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${message.substring(0, 100)}...`);
    console.log(`–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: ${JSON.stringify(keyboard)}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    try {
      await bot.editMessageText(message, {
        chat_id: gameSession.chatId,
        message_id: gameSession.lastMessageId, // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        parse_mode: 'HTML',
        reply_markup: keyboard.length > 0 ? { inline_keyboard: keyboard } : undefined
      });
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
    } catch (editError) {
      if (editError.response && editError.response.statusCode === 400 && 
          editError.response.body && editError.response.body.description === 'message is not modified') {
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
      } else {
        throw editError; // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response?.data || error.message);
  }
}

module.exports = {
  handleStart,
  handleCreateGame,
  handleMessage,
  handleCallbackQuery,
  updateGameMessage,
  restoreStateFromMessage,
  handleStopGame
};
