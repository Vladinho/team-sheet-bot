require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const StateManager = require('./stateManager');
const { 
  handleStart, 
  handleCreateGame, 
  handleEndGame,
  handleMessage, 
  handleCallbackQuery,
  restoreStateFromMessage
} = require('./handlers');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;
const ADMIN_ID = parseInt(process.env.ADMIN_ID);
const GROUP_ID = process.env.GROUP_ID ? parseInt(process.env.GROUP_ID) : null;

// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
const stateManager = new StateManager();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ —Ñ–∞–π–ª–∞)
let gameSessions, userStates, friends;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
async function initializeState() {
  const state = await stateManager.loadState();
  gameSessions = state.gameSessions;
  userStates = state.userStates;
  friends = state.friends;
  
  // –î–µ–ª–∞–µ–º stateManager –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è handlers
  global.stateManager = stateManager;
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  stateManager.startAutoSave(gameSessions, userStates, friends);
  
  console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start(?:\s+(\d+)\s+(.+))?/, (msg, match) => {
  if (match && match[1] && match[2]) {
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - —Å–æ–∑–¥–∞–µ–º –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
    const userId = msg.from.id;
    
    if (userId !== ADMIN_ID) {
      bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã.');
      return;
    }
    
    const playersLimit = parseInt(match[1]);
    const gameDescription = match[2];
    
    handleCreateGame(bot, msg, gameSessions, userStates, playersLimit, gameDescription, friends);
  } else {
    // –û–±—ã—á–Ω—ã–π /start –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    handleStart(bot, msg, gameSessions, userStates, ADMIN_ID);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥—Ä—É–∑–µ–π
bot.onText(/\/friends/, (msg) => {
  const userId = msg.from.id;
  const userFriends = friends.get(userId) || [];
  
  console.log(`[DEBUG] –ö–æ–º–∞–Ω–¥–∞ /friends: userId=${userId}`);
  console.log(`[DEBUG] –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ friends:`, Array.from(friends.entries()));
  console.log(`[DEBUG] –î—Ä—É–∑—å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, userFriends);
  
  if (userFriends.length === 0) {
    bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π –≤ —Å–ø–∏—Å–∫–µ.\n\n–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞: + –ò–º—è\n–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞: - –ò–º—è');
  } else {
    const friendsList = userFriends.map(f => `‚Ä¢ ${f.name}`).join('\n');
    bot.sendMessage(msg.chat.id, 
      `ü§ù <b>–í–∞—à–∏ –¥—Ä—É–∑—å—è:</b>\n\n${friendsList}\n\n` +
      `–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞: + –ò–º—è\n` +
      `–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞: - –ò–º—è`, 
      { parse_mode: 'HTML' }
    );
  }
});

// –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot.onText(/\/debug/, (msg) => {
  const userId = msg.from.id;
  console.log(`[DEBUG] –ö–æ–º–∞–Ω–¥–∞ /debug: userId=${userId}`);
  console.log(`[DEBUG] –ü–æ–ª–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ friends:`, Array.from(friends.entries()));
  console.log(`[DEBUG] –ò–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏:`, Array.from(gameSessions.entries()));
  
  const userFriends = friends.get(userId) || [];
  const debugInfo = `üîç <b>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n` +
    `User ID: ${userId}\n` +
    `–î—Ä—É–∑–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${friends.size}\n` +
    `–í–∞—à–∏—Ö –¥—Ä—É–∑–µ–π: ${userFriends.length}\n` +
    `–ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä: ${gameSessions.size}\n\n` +
    `–í–∞—à–∏ –¥—Ä—É–∑—å—è: ${userFriends.map(f => f.name).join(', ') || '–Ω–µ—Ç'}`;
  
  bot.sendMessage(msg.chat.id, debugInfo, { parse_mode: 'HTML' });
});

// –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
bot.onText(/\/save/, (msg) => {
  const userId = msg.from.id;
  
  if (userId !== ADMIN_ID) {
    bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è.');
    return;
  }
  
  stateManager.saveState(gameSessions, userStates, friends);
  bot.sendMessage(msg.chat.id, '‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª.');
});

// –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
bot.onText(/\/end_game/, (msg) => {
  const userId = msg.from.id;
  
  if (userId !== ADMIN_ID) {
    bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã.');
    return;
  }
  
  handleEndGame(bot, msg, gameSessions, userStates);
});

// –ö–æ–º–∞–Ω–¥–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
bot.onText(/\/restore_state/, (msg) => {
  const userId = msg.from.id;
  
  if (userId !== ADMIN_ID) {
    bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è.');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
  const chatId = msg.chat.id;
  const existingGame = gameSessions.get(chatId);
  
  if (existingGame) {
    bot.sendMessage(chatId, '–ê–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /end_game');
    return;
  }
  
  bot.sendMessage(chatId, 
    '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ –∏–≥—Ä—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è.\n\n' +
    '–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ –∏–≥—Ä—É.'
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  handleMessage(bot, msg, gameSessions, userStates, friends);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', (query) => {
  handleCallbackQuery(bot, query, gameSessions, userStates, ADMIN_ID, friends);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
  console.error('–û—à–∏–±–∫–∞ polling:', error);
});

bot.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
process.on('SIGINT', async () => {
  console.log('\n–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ...');
  await stateManager.saveState(gameSessions, userStates, friends);
  console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
  process.exit(0);
});

process.on('SIGTERM', async () => {
  console.log('\n–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ...');
  await stateManager.saveState(gameSessions, userStates, friends);
  console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
  process.exit(0);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function startBot() {
  await initializeState();
  
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
  console.log(`–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${ADMIN_ID}`);
  console.log(`–ì—Ä—É–ø–ø–∞: ${GROUP_ID || '–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞'}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
startBot().catch(error => {
  console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
  process.exit(1);
});
